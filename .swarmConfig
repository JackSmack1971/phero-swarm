{
  "pheromoneFile": ".pheromone",
  "version": "2.3.0-ai-intelligence-optimized",
  "configMode": "adaptive_hierarchical_dynamic",
  "coreConfig": {
    "targetFileSize": {
      "maxLines": 500,
      "maxActiveSignals": 25,
      "compressionThreshold": 400,
      "aiOptimizedSizing": true,
      "adaptiveThresholds": {
        "simple_projects": {"maxLines": 350, "maxSignals": 18},
        "complex_projects": {"maxLines": 600, "maxSignals": 32},
        "ai_enhanced_projects": {"maxLines": 550, "maxSignals": 28}
      }
    },
    "enhancedEvaporationRates": {
      "default": 0.05,
      "meta": 0.01,
      "state": 0.03,
      "need": 0.08,
      "problem": 0.02,
      "coordination": 0.12,
      "intelligence": 0.08,
      "evolution": 0.003,
      "narrative": 0.15,
      "operational": 0.25,
      "consolidated": 0.02,
      "performance": 0.04,
      "ai_enhanced": 0.02,
      "quality": 0.06,
      "optimization": 0.05,
      "integration": 0.07,
      "security": 0.03,
      "predictive": 0.04
    },
    "signalPruneThreshold": 0.15,
    "explorationRate": 0.02,
    "aiEnhancementFactor": 1.2,
    "adaptiveLearningRate": 0.08
  },
  "compressionProfile": "ai_intelligent_adaptive",
  "enhancedSignalCategories": {
    "meta": [
      "project_compass",
      "agent_heartbeat", 
      "system_bootstrapped",
      "system_bootstrapped_enhanced",
      "orchestrator_coordination_state",
      "system_health_summary"
    ],
    "state": [
      "project_initialization_complete",
      "framework_scaffolding_complete",
      "feature_specification_complete",
      "feature_lifecycle_complete",
      "ai_enhancement_complete"
    ],
    "need": [
      "framework_scaffolding_needed",
      "feature_ready_for_coding",
      "human_review_requested",
      "ai_optimization_needed",
      "quality_enhancement_required"
    ],
    "problem": [
      "task_execution_failed",
      "integration_conflict_detected",
      "security_concern_identified",
      "size_overflow_detected",
      "ai_anomaly_detected"
    ],
    "coordination": [
      "orchestrator_handshake_offered",
      "peer_coordination_established",
      "intelligent_coordination_established",
      "cross_feature_coordination_required"
    ],
    "intelligence": [
      "pattern_detected",
      "collective_intelligence_insight",
      "intelligence_metrics_summary",
      "ai_learning_pattern_discovered",
      "predictive_insight_generated"
    ],
    "evolution": [
      "evolution_proposed_by_metagenesis",
      "evolution_applied_successfully",
      "evolution_trigger_activated",
      "adaptive_evolution_trigger_activated",
      "multi_objective_optimization_complete"
    ],
    "operational": [
      "task_delegated",
      "document_created",
      "workflow_state_summary",
      "resource_allocation_updated"
    ],
    "consolidated": [
      "feature_lifecycle_complete",
      "peer_coordination_established",
      "intelligence_metrics_summary",
      "ai_optimization_cycle_complete"
    ],
    "performance": [
      "mode_performance_degraded",
      "agent_inefficiency_detected",
      "optimization_opportunity_identified",
      "performance_baseline_established",
      "evolution_effectiveness_measured",
      "predictive_performance_baseline_established"
    ],
    "quality": [
      "ai_quality_assurance_checkpoint",
      "quality_threshold_exceeded",
      "quality_improvement_achieved",
      "comprehensive_quality_validation"
    ],
    "optimization": [
      "intelligent_resource_optimization_opportunity",
      "performance_optimization_applied",
      "efficiency_improvement_identified",
      "multi_dimensional_optimization_complete"
    ],
    "integration": [
      "intelligent_cross_feature_integration_required",
      "integration_conflict_resolved",
      "seamless_integration_achieved",
      "integration_validation_complete"
    ],
    "security": [
      "intelligent_security_enhancement_required",
      "security_vulnerability_detected",
      "security_compliance_achieved",
      "threat_mitigation_implemented"
    ],
    "predictive": [
      "success_probability_updated",
      "risk_forecast_generated",
      "timeline_prediction_refined",
      "performance_trend_identified"
    ]
  },
  "enhancedSignalPriorities": {
    "project_compass": 10.0,
    "system_bootstrapped_enhanced": 9.5,
    "adaptive_evolution_trigger_activated": 9.0,
    "intelligent_security_enhancement_required": 8.8,
    "task_execution_failed": 8.5,
    "integration_conflict_detected": 8.0,
    "security_concern_identified": 8.5,
    "size_overflow_detected": 8.0,
    "intelligent_coordination_established": 7.8,
    "ai_quality_assurance_checkpoint": 7.5,
    "mode_performance_degraded": 7.5,
    "evolution_trigger_activated": 7.0,
    "feature_lifecycle_complete": 7.0,
    "human_review_requested": 7.0,
    "intelligent_cross_feature_integration_required": 6.8,
    "ai_learning_pattern_discovered": 6.5,
    "intelligent_resource_optimization_opportunity": 6.5,
    "peer_coordination_established": 6.0,
    "optimization_opportunity_identified": 6.5,
    "agent_inefficiency_detected": 6.0,
    "predictive_performance_baseline_established": 5.5,
    "performance_baseline_established": 5.0,
    "evolution_effectiveness_measured": 5.5,
    "default": 1.0
  },
  "aiEnhancedPerformanceThresholds": {
    "taskCompletionTime": {
      "warning": "25m",
      "critical": "50m",
      "ai_optimized": "20m",
      "predictive_threshold": "18m"
    },
    "failureRate": {
      "warning": 0.15,
      "critical": 0.35,
      "ai_target": 0.08,
      "predictive_intervention": 0.12
    },
    "iterationCount": {
      "warning": 4,
      "critical": 7,
      "ai_optimized": 3,
      "efficiency_target": 2.5
    },
    "debuggingCycles": {
      "warning": 2,
      "critical": 4,
      "ai_prevention": 1.5,
      "proactive_threshold": 1
    },
    "tokenLimitHits": {
      "warning": 1,
      "critical": 3,
      "ai_optimization": 0.5,
      "resource_efficiency_target": 0.2
    },
    "partialCompletions": {
      "warning": 2,
      "critical": 4,
      "quality_threshold": 1,
      "ai_completion_rate": 0.95
    },
    "aiSpecificThresholds": {
      "prediction_accuracy": {
        "minimum": 0.75,
        "target": 0.85,
        "excellence": 0.90
      },
      "optimization_effectiveness": {
        "minimum": 0.15,
        "target": 0.25,
        "breakthrough": 0.40
      },
      "intelligence_convergence": {
        "minimum": 0.70,
        "target": 0.85,
        "mastery": 0.95
      }
    }
  },
  "enhancedEvolutionConfig": {
    "aiDrivenTriggerConditions": {
      "performance_degradation_pattern": {
        "minOccurrences": 2,
        "timeWindow": "18h",
        "threshold": 0.5,
        "aiPredictiveAnalysis": true,
        "interventionStrategy": "proactive"
      },
      "repeated_failure_pattern": {
        "minOccurrences": 2,
        "timeWindow": "8h",
        "sameMode": true,
        "aiPatternRecognition": true,
        "rootCauseAnalysis": "enabled"
      },
      "inefficiency_detection": {
        "minOccurrences": 2,
        "timeWindow": "36h",
        "improvementPotential": 0.2,
        "aiOptimizationAnalysis": true,
        "resourceEfficiencyFocus": true
      },
      "multi_objective_opportunity": {
        "performanceGain": 0.15,
        "reliabilityImprovement": 0.10,
        "efficiencyIncrease": 0.12,
        "aiOptimizationScore": 0.75,
        "geneticAlgorithmReady": true
      }
    },
    "cooldownPeriod": "4h",
    "maxEvolutionsPerMode": 5,
    "evolutionWindow": "5d",
    "aiEnhancedParameters": {
      "geneticAlgorithmEnabled": true,
      "neuralArchitectureSearch": true,
      "multiObjectiveOptimization": true,
      "adaptiveMutationRate": true,
      "populationDiversity": 0.8
    }
  },
  "advancedInterpretationCore": {
    "aiEnhancedApproaches": [
      "neural_language_processing",
      "semantic_pattern_matching",
      "predictive_entity_extraction",
      "intelligent_lifecycle_consolidation",
      "multi_dimensional_performance_analysis",
      "contextual_intent_recognition",
      "adaptive_learning_integration"
    ],
    "enhancedConfidenceThresholds": {
      "minimum": 0.75,
      "critical": 0.88,
      "performance": 0.80,
      "ai_enhanced": 0.85,
      "predictive": 0.82,
      "multi_objective": 0.87
    },
    "aiSemanticKeywordMap": {
      "INITIALIZATION COMPLETE": {
        "signal": "project_initialization_complete",
        "confidence": 0.95,
        "context_variations": ["setup finished", "foundation established", "project ready"]
      },
      "AI ENHANCEMENT COMPLETE": {
        "signal": "ai_enhancement_complete",
        "confidence": 0.92,
        "context_variations": ["intelligence integrated", "ai optimized", "neural networks active"]
      },
      "SCAFFOLDING NEEDED": {
        "signal": "framework_scaffolding_needed",
        "confidence": 0.90,
        "urgency_indicators": ["urgent", "blocking", "critical path"]
      },
      "PREDICTIVE ANALYSIS": {
        "signal": "predictive_insight_generated",
        "confidence": 0.88,
        "intelligence_level": "advanced"
      },
      "MULTI OBJECTIVE OPTIMIZATION": {
        "signal": "multi_objective_optimization_complete",
        "confidence": 0.90,
        "performance_indicators": ["pareto optimal", "balanced improvement", "comprehensive enhancement"]
      },
      "INTELLIGENT COORDINATION": {
        "signal": "intelligent_coordination_established",
        "confidence": 0.89,
        "coordination_types": ["ai_driven", "predictive", "optimized"]
      },
      "QUALITY EXCELLENCE": {
        "signal": "ai_quality_assurance_checkpoint",
        "confidence": 0.91,
        "quality_dimensions": ["comprehensive", "multi_dimensional", "ai_validated"]
      },
      "RESOURCE OPTIMIZATION": {
        "signal": "intelligent_resource_optimization_opportunity",
        "confidence": 0.86,
        "optimization_types": ["predictive", "efficiency", "allocation"]
      },
      "SECURITY ENHANCEMENT": {
        "signal": "intelligent_security_enhancement_required",
        "confidence": 0.94,
        "security_levels": ["comprehensive", "threat_modeling", "proactive"]
      },
      "LEARNING PATTERN": {
        "signal": "ai_learning_pattern_discovered",
        "confidence": 0.83,
        "pattern_types": ["emergent", "optimization", "coordination"]
      }
    },
    "contextualInterpretationRules": {
      "projectPhaseAwareness": {
        "initialization": {
          "signal_amplification": 1.2,
          "focus_areas": ["setup", "planning", "research"],
          "expected_patterns": ["project_compass", "initialization_complete"]
        },
        "development": {
          "signal_amplification": 1.0,
          "focus_areas": ["coding", "testing", "integration"],
          "expected_patterns": ["feature_lifecycle", "performance_optimization"]
        },
        "optimization": {
          "signal_amplification": 1.3,
          "focus_areas": ["ai_enhancement", "performance", "quality"],
          "expected_patterns": ["multi_objective_optimization", "intelligence_integration"]
        },
        "completion": {
          "signal_amplification": 1.1,
          "focus_areas": ["validation", "documentation", "deployment"],
          "expected_patterns": ["quality_assurance", "comprehensive_validation"]
        }
      },
      "agentSpecificContext": {
        "metagenesis-orchestrator": {
          "signal_sensitivity": 1.4,
          "focus_patterns": ["evolution", "optimization", "genetic_algorithm"],
          "intelligence_weighting": 1.3
        },
        "uber-orchestrator": {
          "signal_sensitivity": 1.2,
          "focus_patterns": ["coordination", "routing", "decision_intelligence"],
          "efficiency_weighting": 1.2
        },
        "coder-test-driven": {
          "signal_sensitivity": 1.1,
          "focus_patterns": ["performance", "quality", "implementation"],
          "technical_weighting": 1.1
        }
      },
      "temporalContextAnalysis": {
        "recentSignalInfluence": 0.3,
        "historicalPatternWeight": 0.4,
        "predictiveModelWeight": 0.3,
        "adaptiveWeightAdjustment": true
      }
    },
    "intelligentEntityExtraction": {
      "aiEnhancedPatterns": {
        "featureNamePattern": "(?:feature|module|component|capability)\\s+['\"]?([A-Za-z0-9_\\-\\s]+)['\"]?",
        "agentNamePattern": "@([A-Za-z0-9_\\-]+)",
        "filePathPattern": "(?:path|file|document|at|saved at|located at)\\s*[:=\\-\\s]*['\"]?((?:[a-zA-Z]:)?(?:[/\\\\][\\w\\s.-]+)*[/\\\\]?[\\w\\s.-]+\\.[a-zA-Z0-9]+)['\"]?",
        "performanceMetricPattern": "(?:improvement|optimization|enhancement)\\s*(\\d+(?:\\.\\d+)?)\\s*(%|percent|times|x)",
        "confidencePattern": "(?:confidence|probability|accuracy)\\s*(\\d+(?:\\.\\d+)?)\\s*(%|percent)?",
        "aiCapabilityPattern": "(?:ai|neural|genetic|predictive|intelligent)\\s+([A-Za-z0-9_\\-\\s]+)\\s+(?:enabled|active|optimized)",
        "qualityMetricPattern": "(?:quality|score|rating)\\s*(\\d+(?:\\.\\d+)?)(?:/10|\\s*out\\s*of\\s*10)?",
        "timeOptimizationPattern": "(?:reduced|improved|optimized)\\s+(?:by\\s+)?(\\d+(?:\\.\\d+)?)\\s*(minutes?|seconds?|hours?|%|percent)"
      },
      "semanticEntityRecognition": {
        "enabled": true,
        "confidenceThreshold": 0.80,
        "multiLanguageSupport": false,
        "contextualDisambiguation": true,
        "temporalEntityTracking": true
      }
    }
  },
  "intelligentCompressionRules": {
    "aiOptimizedArchival": [
      "agent_heartbeat",
      "task_delegated", 
      "document_created",
      "routine_status_updates",
      "low_priority_notifications"
    ],
    "enhancedConsolidationPatterns": {
      "ai_enhanced_feature_lifecycle": {
        "sequence": [
          "feature_specification_complete",
          "ai_architecture_optimization",
          "intelligent_implementation_complete",
          "comprehensive_quality_validation"
        ],
        "result": "ai_optimized_feature_lifecycle_complete",
        "intelligence_preservation": true,
        "performance_metrics_retention": true
      },
      "intelligent_coordination": {
        "sequence": [
          "orchestrator_handshake_offered",
          "ai_capability_assessment",
          "intelligent_coordination_established"
        ],
        "result": "ai_enhanced_coordination_complete",
        "predictive_analysis_preservation": true
      },
      "multi_objective_optimization": {
        "sequence": [
          "performance_baseline_established",
          "optimization_opportunity_identified",
          "genetic_algorithm_applied",
          "multi_objective_improvement_validated"
        ],
        "result": "comprehensive_optimization_cycle_complete",
        "pareto_front_preservation": true,
        "improvement_metrics_retention": true
      },
      "predictive_quality_assurance": {
        "sequence": [
          "quality_baseline_established",
          "ai_quality_prediction",
          "proactive_quality_improvement",
          "comprehensive_quality_validation"
        ],
        "result": "predictive_quality_cycle_complete",
        "prediction_accuracy_retention": true
      }
    },
    "intelligentRetentionCriteria": {
      "maxActiveSignals": 28,
      "emergencyThreshold": 520,
      "aiEnhancedSignalRetention": "14d",
      "performanceSignalRetention": "10d",
      "predictionModelRetention": "30d",
      "learningPatternRetention": "21d",
      "criticalInsightRetention": "60d"
    },
    "adaptiveCompressionStrategy": {
      "projectComplexityAware": true,
      "aiIntelligencePreservation": true,
      "predictiveModelProtection": true,
      "learningContinuityMaintenance": true,
      "humanOversightOptimization": true
    }
  },
  "advancedIntelligenceConfig": {
    "aiEnhancedBayesian": {
      "maxNodes": 12,
      "maxEdges": 18,
      "pruneThreshold": 0.25,
      "neuralNetworkIntegration": true,
      "predictiveModelingEnabled": true,
      "multiObjectiveOptimization": true,
      "adaptiveLearningRate": 0.08
    },
    "intelligentPatterns": {
      "maxActive": 8,
      "confidenceThreshold": 0.78,
      "aiPatternRecognition": true,
      "emergentBehaviorDetection": true,
      "predictivePatternGeneration": true,
      "crossDomainPatternTransfer": true
    },
    "enhancedLearning": {
      "maxSequences": 8,
      "maxKnowledgeNodes": 20,
      "neuralLearningEnabled": true,
      "geneticAlgorithmLearning": true,
      "reinforcementLearningActive": true,
      "transferLearningCapability": true
    },
    "aiPerformanceMonitoring": {
      "trackingEnabled": true,
      "baselineWindow": "18h",
      "trendAnalysis": true,
      "predictiveAnalytics": true,
      "realTimeOptimization": true,
      "adaptiveThresholds": true,
      "multiDimensionalAnalysis": true
    }
  },
  "enhancedDynamicConfigPaths": {
    "detailed": ".swarm/detailed.config.json",
    "patterns": ".swarm/patterns.config.json",
    "intelligence": ".swarm/intelligence.config.json",
    "coordination": ".swarm/coordination.config.json",
    "performance": ".swarm/performance.config.json",
    "aiOptimization": ".swarm/ai_optimization.config.json",
    "geneticAlgorithms": ".swarm/genetic_algorithms.config.json",
    "neuralNetworks": ".swarm/neural_networks.config.json",
    "predictiveModels": ".swarm/predictive_models.config.json"
  },
  "loadStrategy": "ai_optimized_on_demand_caching",
  "aiEnhancedConfigInstructions": {
    "pheromoneScribe": "Load AI-enhanced interpretation logic from dynamicConfigPaths with neural pattern recognition. Integrate predictive models for signal generation. Cache for 2 hours with adaptive refresh.",
    "intelligenceOrchestrator": "Load comprehensive AI intelligence config with neural network and genetic algorithm integration. Enable multi-objective optimization.",
    "coordinationOrchestrator": "Load AI-enhanced coordination protocols with predictive load balancing and intelligent conflict resolution.",
    "metagenesis": "Load genetic algorithm and neural architecture search configs for advanced evolution capabilities. Enable multi-objective optimization with Pareto front analysis.",
    "uberOrchestrator": "Load AI decision intelligence config with predictive routing and performance optimization.",
    "fallbackBehavior": "Use AI-enhanced coreConfig values with graceful degradation. Maintain prediction capabilities in degraded mode.",
    "aiOptimizationInstructions": "Continuous learning enabled. Adaptive parameter tuning active. Performance feedback integration operational."
  },
  "intelligentCompressionInstructions": {
    "priorityRetention": [
      "project_compass",
      "adaptive_evolution_trigger_activated",
      "intelligent_security_enhancement_required",
      "ai_quality_assurance_checkpoint",
      "intelligent_coordination_established",
      "ai_learning_pattern_discovered",
      "multi_objective_optimization_complete"
    ],
    "aiConsolidationTriggers": [
      "ai_lifecycle_complete",
      "intelligent_coordination_established",
      "predictive_analysis_complete",
      "multi_objective_optimization_cycle_complete",
      "comprehensive_quality_validation_complete"
    ],
    "archivalStrategy": "ai_intelligent_preservation_with_predictive_relevance",
    "emergencyProtocol": "preserve_ai_intelligence_compress_operational_data",
    "aiDataRetention": "preserve_learning_patterns_and_predictive_models",
    "adaptiveCompressionEnabled": true,
    "intelligencePreservationPriority": "maximum"
  },
  "aiSystemMonitoring": {
    "neuralNetworkHealth": {
      "enabled": true,
      "convergenceTracking": true,
      "overfittingDetection": true,
      "performanceDegradationAlerts": true
    },
    "geneticAlgorithmMonitoring": {
      "enabled": true,
      "populationDiversityTracking": true,
      "convergenceRateMonitoring": true,
      "prematureConvergenceDetection": true
    },
    "predictiveModelValidation": {
      "enabled": true,
      "accuracyTracking": true,
      "driftDetection": true,
      "recalibrationTriggers": true
    },
    "multiObjectiveOptimizationTracking": {
      "enabled": true,
      "paretoFrontMonitoring": true,
      "objectiveBalanceTracking": true,
      "convergenceQualityAssessment": true
    }
  },
  "humanOversightOptimization": {
    "aiTransparency": {
      "decisionExplanation": "enabled",
      "confidenceReporting": "detailed",
      "uncertaintyQuantification": "active",
      "humanApprovalThresholds": {
        "low_confidence": 0.70,
        "moderate_confidence": 0.85,
        "high_confidence": 0.95
      }
    },
    "adaptiveAutonomy": {
      "autonomyLevel": "supervised_intelligence",
      "humanInterventionTriggers": [
        "prediction_confidence < 0.75",
        "novel_pattern_detected",
        "multi_objective_tradeoff_required",
        "ethical_consideration_detected"
      ],
      "escalationProtocols": {
        "technical_uncertainty": "technical_expert_consultation",
        "strategic_decision": "project_manager_approval",
        "quality_concern": "quality_assurance_review",
        "security_issue": "security_specialist_review"
      }
    }
  }
}
