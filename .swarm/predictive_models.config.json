{
  "//_comment": "Predictive modeling configuration for forecasting, risk assessment, and proactive decision making",
  "predictionFramework": {
    "timeSeriesForecasting": {
      "models": [
        {
          "name": "performance_trend_predictor",
          "algorithm": "prophet",
          "forecastHorizon": "7d",
          "updateFrequency": "daily",
          "seasonalityComponents": ["weekly", "daily"],
          "changePointDetection": true,
          "confidenceIntervals": [0.80, 0.95]
        },
        {
          "name": "resource_usage_predictor",
          "algorithm": "lstm_ensemble",
          "forecastHorizon": "48h",
          "updateFrequency": "6h",
          "ensembleSize": 5,
          "diversityMaintenance": true,
          "predictionIntervals": true
        }
      ],
      "validationStrategy": {
        "method": "time_series_split",
        "testSize": "30d",
        "validationSize": "14d",
        "rollingValidation": true
      }
    },
    "riskAssessment": {
      "models": [
        {
          "name": "project_risk_classifier",
          "algorithm": "gradient_boosting",
          "riskCategories": ["technical", "timeline", "resource", "quality"],
          "updateFrequency": "weekly",
          "featureImportanceTracking": true,
          "probabilisticOutput": true
        },
        {
          "name": "failure_probability_estimator",
          "algorithm": "survival_analysis",
          "survivalDistribution": "weibull",
          "censoringHandling": true,
          "timeVaryingCovariates": true
        }
      ],
      "riskThresholds": {
        "low": 0.2,
        "medium": 0.5,
        "high": 0.8,
        "critical": 0.95
      }
    },
    "opportunityDetection": {
      "models": [
        {
          "name": "optimization_opportunity_detector",
          "algorithm": "anomaly_detection",
          "detectionMethod": "isolation_forest",
          "outlierFraction": 0.1,
          "featureScaling": "robust_scaler"
        },
        {
          "name": "efficiency_improvement_predictor",
          "algorithm": "multi_output_regression",
          "outputTargets": ["time_savings", "quality_improvement", "resource_efficiency"],
          "crossValidation": "stratified_k_fold",
          "hyperparameterTuning": "bayesian_optimization"
        }
      ]
    }
  },
  "featureEngineering": {
    "automaticFeatureGeneration": {
      "enabled": true,
      "polynomialFeatures": {
        "degree": 2,
        "interactionOnly": false,
        "includeOriginal": true
      },
      "temporalFeatures": {
        "lags": [1, 6, 12, 24],
        "rollingStatistics": ["mean", "std", "min", "max"],
        "rollingWindows": [3, 7, 14]
      },
      "categoricalEncoding": {
        "method": "target_encoding",
        "smoothing": 1.0,
        "minSamplesLeaf": 20
      }
    },
    "featureSelection": {
      "enabled": true,
      "method": "recursive_feature_elimination",
      "scoringMetric": "accuracy",
      "crossValidation": 5,
      "stepSize": 0.1
    },
    "featureImportance": {
      "trackingEnabled": true,
      "importanceMethod": "permutation_importance",
      "updateFrequency": "monthly",
      "visualizationEnabled": true
    }
  },
  "modelEnsembling": {
    "stackingEnsemble": {
      "enabled": true,
      "baseModels": ["random_forest", "gradient_boosting", "neural_network"],
      "metaLearner": "logistic_regression",
      "crossValidationFolds": 5,
      "stackingLayers": 2
    },
    "votingEnsemble": {
      "enabled": true,
      "votingStrategy": "soft_voting",
      "modelWeights": "performance_based",
      "dynamicWeighting": true
    },
    "bayesianModelAveraging": {
      "enabled": false,
      "priorDistribution": "normal",
      "posteriorSampling": "mcmc",
      "burnInSteps": 1000
    }
  },
  "modelValidation": {
    "crossValidation": {
      "strategy": "stratified_k_fold",
      "folds": 5,
      "repetitions": 3,
      "shuffling": true,
      "randomState": 42
    },
    "performanceMetrics": {
      "classification": ["accuracy", "precision", "recall", "f1_score", "roc_auc"],
      "regression": ["mae", "mse", "rmse", "r2_score", "mape"],
      "probabilistic": ["log_loss", "brier_score", "calibration_error"]
    },
    "modelDriftDetection": {
      "enabled": true,
      "detectionMethod": "ks_test",
      "significanceLevel": 0.05,
      "monitoringFrequency": "weekly",
      "retrainingTrigger": "drift_detected"
    }
  }
}
